{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/raster/BrushRasterBitmap.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/brushes.js","webpack:///./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","webpack:///./node_modules/@arcgis/core/views/webgl/programUtils.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","webpack:///./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js"],"names":["Number","POSITIVE_INFINITY","t","Math","PI","o","c","N","LN2","a","n","h","M","P","log","g","r","e","shaders","vertexShader","fragmentShader","attributes","a_pos","nearest","defines","samplingMode","mips","bilinear","bicubic","trilinear","i","state","resolution","pixelRatio","round","rotation","isSourceScaled","super","arguments","this","_desc","vsPath","fsPath","a_position","a_texcoord","_quad","dispose","context","setBlendingEnabled","blendFunction","setBlendFunctionSeparate","setColorMask","setStencilWriteMask","setStencilTestEnabled","setStencilFunction","stencilRef","s","renderingOptions","painter","source","timeline","begin","name","d","materialManager","getProgram","coordScale","l","computedOpacity","m","transforms","p","setSamplingProfile","bind","bindProgram","setUniformMatrix3fv","dvs","setUniform1i","setUniform2fv","setUniform1f","draw","end","geometry","location","count","type","_color","_program","setFaceCullingEnabled","setStencilOp","getVAO","bufferLayouts","setUniform4fv","displayMat3","bindVAO","drawElements","indexBuffer","size","_patternMatrix","_programOptions","id","pattern","_vao","styleLayerUID","_loadWGLResources","f","displayLevel","styleLayer","backgroundMaterial","u","vectorTilesMaterialManager","getPaintValue","_","b","window","devicePixelRatio","v","spriteMosaic","x","y","drawPhase","HITTEST","j","U","getMaterialProgram","getMosaicItemPosition","setUniform2f","tl","br","page","z","coordRange","max","key","level","drawArrays","Int8Array","createVertex","getAttributeLocations","getLayoutInfo","requiredLevel","circleMaterial","displayViewMat3","layerData","has","setDataUniforms","get","prepareForRendering","circleVertexArrayObject","circleIndexCount","Uint32Array","BYTES_PER_ELEMENT","circleIndexStart","triangleCount","_fillProgramOptions","_outlineProgramOptions","renderPass","getPaintProperty","isDataDriven","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","T","E","w","D","fillVertexArrayObject","fillIndexCount","fillIndexStart","outlineMaterial","outlineVertexArrayObject","outlineIndexCount","outlineIndexStart","_dashArray","lineMaterial","length","lineVertexArrayObject","lineIndexCount","lineIndexStart","_iconProgramOptions","sdf","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","getLayoutValue","isIconSDF","V","S","updateOpacityInfo","iconVertexArrayObject","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","glyphMosaic","textMaterial","glyphPerPageElementsMap","getValue","L","k","I","_glyphTextureSize","width","height","O","R","A","F","textVertexArrayObject","forEach","_renderGlyphRange","indexOf","getGeometryType","commit","getGeometry","attributeView","bindTextures","forEachCommand","drawGeometry","data","dotDensity","normalized","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","_disposeTextures","FILL","rendererInfo","load","materialKey","_setSharedUniforms","textureBinding","textureManager","vvColor","setUniform1fv","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","ddDotSize","ddDotScale","scale","setUniformMatrix4fv","ddColors","ddActiveDots","ddBackgroundColor","ddDotValue","_bindDotDensityTextures","_createDotDensityTextures","ddSeed","setUniform1iv","bindTexture","_seed","_allocDotDensityTexture","Float32Array","getFloat","wrapMode","pixelFormat","dataType","LABEL","mapAligned","abs","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","floor","LINE","setFrontFace","setCullFace","MARKER","vvRotation","vvMaterialParameters","vvRotationType","TEXT","lut","stretch","hillshade","_rendererUniformInfos","Map","suspended","capabilities","textureFloat","textureFloatLinear","updateTexture","getShaderVariations","symbolizerParameters","drawWithProgram","transformGrid","opacity","getUniformInfos","names","textures","getTextures","u_coordScale","u_dvsMat3","colormap","colormapOffset","join","set","interpolation","push","isRendereredSource","marker","line","fill","text","label","clip","stencil","bitmap","raster","tileInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","G","readFile","resolve","read","Error","exec","path","start","index","slice","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","isReady","_getTexture","descriptor","offset","stride","divisor","texture","triangleCountReportedInDebug","document","createElement","setAttribute","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","target","rctx","_vertexBuffer","Uint16Array","unbind","background","bitBlit","blend","filtering","fx","integrate","highlight","magnifier","materials","icon","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","common","util","split","resolveIncludes","toFixed","options","value","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","setStencilFunctionSeparate","_initialize","constructor"],"mappings":"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","file":"js/chunk-2893bf7e.d2500dbd.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nconst n=Number.POSITIVE_INFINITY,t=Math.PI,r=2*t,u=t/2,o=128/t,e=t/128,c=256/360,f=t/180,i=1.414213562,I=1/i,N=1/Math.LN2;function a(n,t){return(n%=t)>=0?n:n+t}function h(n){return a(n*o,256)}function M(n){return a(n*c,256)}function P(n){return Math.log(n)*N}function T(n){return n*n}function b(n,t,r){return n*(1-r)+t*r}function g(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{e as C_256_TO_RAD,r as C_2PI,c as C_DEG_TO_256,f as C_DEG_TO_RAD,n as C_INFINITY,t as C_PI,u as C_PI_BY_2,o as C_RAD_TO_256,i as C_SQRT2,I as C_SQRT2_INV,g as between,M as degToByte,b as interpolate,P as log2,a as positiveMod,h as radToByte,T as sqr};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:{a_pos:0}};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{TEXTURE_BINDING_BITMAP as e}from\"../definitions.js\";import t from\"../VertexStream.js\";import i from\"./WGLBrush.js\";const s={nearest:{defines:[],samplingMode:9728,mips:!1},bilinear:{defines:[],samplingMode:9729,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:9729,mips:!1},trilinear:{defines:[],samplingMode:9987,mips:!0}},n=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,n=t.resolution/t.pixelRatio/i.resolution,a=Math.round(e.pixelRatio)!==e.pixelRatio,r=n>1.05||n<.95;return i.rotation||r||a||t.isSourceScaled||t.rotation?s.bilinear:s.nearest}return s[i.samplingMode]};class a extends i{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:{a_position:0,a_texcoord:1}}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),\"additive\"===t.blendFunction?e.setBlendFunctionSeparate(1,1,1,1):e.setBlendFunctionSeparate(1,771,1,771),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(514,t.stencilRef,255)}draw(i,s){const{context:a,renderingOptions:r,painter:o}=i;if(!s.source)return;i.timeline.begin(this.name),this._quad||(this._quad=new t(a,[0,0,1,0,0,1,1,1]));const d=n(i,s,r),c=o.materialManager.getProgram(i,this._desc,d.defines),{coordScale:l,computedOpacity:m,transforms:p}=s;s.setSamplingProfile(d),s.bind(i,e),a.bindProgram(c),c.setUniformMatrix3fv(\"u_dvsMat3\",p.dvs),c.setUniform1i(\"u_texture\",e),c.setUniform2fv(\"u_coordScale\",l),c.setUniform1f(\"u_opacity\",m),this._quad.draw(),i.timeline.end(this.name)}}export default a;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{f as t}from\"../../../../../chunks/vec4f32.js\";import{createProgram as r}from\"../../../../webgl/programUtils.js\";import s from\"./WGLBrush.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";const i=()=>e(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:5122}]});class a extends s{constructor(){super(...arguments),this._color=t(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:t}){t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(7680,7680,7681),t.setStencilWriteMask(255),t.setStencilFunction(519,0,255)}draw(t,s){const{context:e,state:a}=t;this._program||(this._program=r(e,o));const n=this._program,m=i(),c=s.getVAO(e,a,m.attributes,m.bufferLayouts);e.bindProgram(this._program),n.setUniform2fv(\"u_coord_range\",[1,1]),n.setUniform4fv(\"u_color\",this._color),n.setUniformMatrix3fv(\"u_dvsMat3\",a.displayMat3),e.bindVAO(c),e.drawElements(4,c.indexBuffer.size,5125,0),e.bindVAO()}}export default a;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import\"../../../../../core/mathUtils.js\";import{f as t}from\"../../../../../chunks/vec4f32.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as r,VTL_HIGH_RES_CUTOFF as e}from\"../definitions.js\";import{c as o}from\"../../../../../chunks/mat3f32.js\";import\"../../../../../chunks/builtins.js\";import i from\"../../../../webgl/BufferObject.js\";import s from\"../../../../webgl/VertexArrayObject.js\";import\"../../../../webgl/FramebufferObject.js\";import{u32to4Xu8 as a}from\"../number.js\";import{WGLDrawPhase as n}from\"../enums.js\";import c from\"./WGLBrush.js\";class f extends c{constructor(){super(...arguments),this._color=t(1,0,0,1),this._patternMatrix=o(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(t,o){const{context:i,painter:s,styleLayerUID:c}=t;this._loadWGLResources(t);const f=t.displayLevel,m=t.styleLayer,l=m.backgroundMaterial,u=s.vectorTilesMaterialManager,p=m.getPaintValue(\"background-color\",f),_=m.getPaintValue(\"background-opacity\",f),d=m.getPaintValue(\"background-pattern\",f),h=void 0!==d,g=p[3]*_,b=1|window.devicePixelRatio,v=t.spriteMosaic;let M;const x=b>e?2:1,y=t.drawPhase===n.HITTEST,j=this._programOptions;j.id=y,j.pattern=h;const U=u.getMaterialProgram(i,l,j);if(i.bindVAO(this._vao),i.bindProgram(U),h){if(M=v.getMosaicItemPosition(d,!0),!M)return;U.setUniform1f(\"u_opacity\",_),U.setUniform2f(\"u_pattern_tl\",M.tl[0],M.tl[1]),U.setUniform2f(\"u_pattern_br\",M.br[0],M.br[1]),U.setUniform1i(\"u_texture\",r),v.bind(i,9729,M.page,r)}else this._color[0]=g*p[0],this._color[1]=g*p[1],this._color[2]=g*p[2],this._color[3]=g,U.setUniform4fv(\"u_color\",this._color);if(U.setUniform1f(\"u_depth\",m.z||0),y){const t=a(c+1);U.setUniform4fv(\"u_id\",t)}for(const r of o){if(U.setUniform1f(\"u_coord_range\",r.coordRange[0]),U.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),h){const t=Math.max(2**(Math.round(f)-r.key.level),1),e=x*r.size[0]*t,o=e/M.size[0],i=e/M.size[1];this._patternMatrix[0]=o,this._patternMatrix[4]=i,U.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}i.setStencilFunction(514,r.stencilRef,255),i.drawArrays(5,0,4)}}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),n=i.createVertex(r,35044,a),c=new s(r,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:n});this._vao=c}}export{f as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{isNone as e}from\"../../../../../core/maybe.js\";import{u32to4Xu8 as t}from\"../number.js\";import{WGLDrawPhase as r}from\"../enums.js\";import a from\"./WGLBrush.js\";class i extends a{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(a,i){const{context:n,displayLevel:s,requiredLevel:o,state:l,drawPhase:c,painter:m,styleLayerUID:d}=a,f=a.styleLayer,u=f.circleMaterial,p=m.vectorTilesMaterialManager,y=1.2,g=f.getPaintValue(\"circle-translate\",s),v=f.getPaintValue(\"circle-translate-anchor\",s),M=c===r.HITTEST,_=this._programOptions;_.id=M;const x=p.getMaterialProgram(n,u,_);n.bindProgram(x),x.setUniformMatrix3fv(\"u_displayMat3\",1===v?l.displayMat3:l.displayViewMat3),x.setUniform2fv(\"u_circleTranslation\",g),x.setUniform1f(\"u_depth\",f.z),x.setUniform1f(\"u_antialiasingWidth\",y);let U=-1;if(M){const e=t(d+1);x.setUniform4fv(\"u_id\",e)}for(const t of i){if(!t.layerData.has(d))continue;t.key.level!==U&&(U=t.key.level,u.setDataUniforms(x,s,f,U));const r=t.layerData.get(d);r.prepareForRendering(n);const a=r.circleVertexArrayObject;e(a)||(n.bindVAO(a),x.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),o!==t.key.level?n.setStencilFunction(514,t.stencilRef,255):n.setStencilFunction(516,255,255),n.drawElements(4,r.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),t.triangleCount+=r.circleIndexCount/3)}}}export{i as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../../../core/maybe.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e,VTL_HIGH_RES_CUTOFF as i}from\"../definitions.js\";import{c as a}from\"../../../../../chunks/mat3f32.js\";import{u32to4Xu8 as r}from\"../number.js\";import{WGLDrawPhase as n}from\"../enums.js\";import l from\"./WGLBrush.js\";const o=1/65536;class s extends l{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1},this._patternMatrix=a()}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:a,renderPass:l,styleLayerUID:o}=t,s=t.styleLayer,f=s.getPaintValue(\"fill-pattern\",i),u=void 0!==f,d=!u&&s.getPaintValue(\"fill-antialias\",i);let p=!0,m=1;if(!u){const t=s.getPaintProperty(\"fill-color\"),e=s.getPaintProperty(\"fill-opacity\");if(!(null!=t&&t.isDataDriven||null!=e&&e.isDataDriven)){const t=s.getPaintValue(\"fill-color\",i);m=s.getPaintValue(\"fill-opacity\",i)*t[3],m>=1&&(p=!1)}}if(p&&\"opaque\"===l)return;let c;a===n.HITTEST&&(c=r(o+1));const _=s.getPaintValue(\"fill-translate\",i),y=s.getPaintValue(\"fill-translate-anchor\",i);(p||\"translucent\"!==l)&&this._drawFill(t,o,s,e,_,y,f,c);const M=!s.hasDataDrivenOutlineColor&&s.outlineUsesFillColor&&m<1;d&&\"opaque\"!==l&&!M&&this._drawOutline(t,o,s,e,_,y,c)}_drawFill(a,r,l,s,f,u,d,p){const{context:m,displayLevel:c,state:_,drawPhase:y,painter:M,pixelRatio:g,spriteMosaic:v}=a,x=l.fillMaterial,P=M.vectorTilesMaterialManager,h=void 0!==d,U=g>i?2:1;let T;const E=y===n.HITTEST,b=this._fillProgramOptions;b.id=E,b.pattern=h;const w=P.getMaterialProgram(m,x,b);if(m.bindProgram(w),h){if(T=v.getMosaicItemPosition(d,!0),!T)return void m.bindProgram();w.setUniform2f(\"u_pattern_tl\",T.tl[0],T.tl[1]),w.setUniform2f(\"u_pattern_br\",T.br[0],T.br[1]),w.setUniform1i(\"u_texture\",e),v.bind(m,9729,T.page,e)}w.setUniformMatrix3fv(\"u_displayMat3\",1===u?_.displayMat3:_.displayViewMat3),w.setUniform2fv(\"u_fillTranslation\",f),w.setUniform1f(\"u_depth\",l.z+o),E&&w.setUniform4fv(\"u_id\",p);let D=-1;for(const e of s){if(!e.layerData.has(r))continue;e.key.level!==D&&(D=e.key.level,x.setDataUniforms(w,c,l,D));const i=e.layerData.get(r);i.prepareForRendering(m);const a=i.fillVertexArrayObject;if(!t(a)){if(m.bindVAO(a),w.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),h){const t=Math.max(2**(Math.round(c)-e.key.level),1),i=e.coordRange[0]/(U*e.size[0]*t),a=1/(T.size[0]*i),r=1/(T.size[1]*i);this._patternMatrix[0]=a,this._patternMatrix[4]=r,w.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}m.setStencilFunction(514,e.stencilRef,255),m.drawElements(4,i.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart),e.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,s,f){const{context:u,displayLevel:d,state:p,drawPhase:m,painter:c,pixelRatio:_}=e,y=a.outlineMaterial,M=c.vectorTilesMaterialManager,g=.75/_,v=m===n.HITTEST,x=this._outlineProgramOptions;x.id=v;const P=M.getMaterialProgram(u,y,x);u.bindProgram(P),P.setUniformMatrix3fv(\"u_displayMat3\",1===s?p.displayMat3:p.displayViewMat3),P.setUniform2fv(\"u_fillTranslation\",l),P.setUniform1f(\"u_depth\",a.z+o),P.setUniform1f(\"u_outline_width\",g),v&&P.setUniform4fv(\"u_id\",f);let h=-1;for(const n of r){if(!n.layerData.has(i))continue;n.key.level!==h&&(h=n.key.level,y.setDataUniforms(P,d,a,h));const e=n.layerData.get(i);e.prepareForRendering(u);const r=e.outlineVertexArrayObject;t(r)||(u.bindVAO(r),P.setUniformMatrix3fv(\"u_dvsMat3\",n.transforms.dvs),u.setStencilFunction(514,n.stencilRef,255),u.drawElements(4,e.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),n.triangleCount+=e.outlineIndexCount/3)}}}export{s as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../../../core/maybe.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e}from\"../definitions.js\";import{c as r}from\"../../../../../chunks/vec2f32.js\";import{u32to4Xu8 as a}from\"../number.js\";import{WGLDrawPhase as i}from\"../enums.js\";import s from\"./WGLBrush.js\";class n extends s{constructor(){super(...arguments),this._dashArray=r(),this._programOptions={id:!1,pattern:!1}}dispose(){}drawMany(r,s){const{context:n,displayLevel:o,state:l,drawPhase:f,painter:m,styleLayerUID:d}=r,p=r.styleLayer,u=p.lineMaterial,c=m.vectorTilesMaterialManager,y=p.getPaintValue(\"line-translate\",o),_=p.getPaintValue(\"line-translate-anchor\",o),h=p.getPaintValue(\"line-pattern\",o),g=void 0!==h,M=1/r.pixelRatio,U=8,v=f===i.HITTEST,x=this._programOptions;x.id=v,x.pattern=g;const b=c.getMaterialProgram(n,u,x);if(n.bindProgram(b),b.setUniformMatrix3fv(\"u_displayViewMat3\",l.displayViewMat3),b.setUniformMatrix3fv(\"u_displayMat3\",1===_?l.displayMat3:l.displayViewMat3),b.setUniform2fv(\"u_lineTranslation\",y),b.setUniform1f(\"u_depth\",p.z),b.setUniform1f(\"u_antialiasing\",M),v){const t=a(d+1);b.setUniform4fv(\"u_id\",t)}if(g){const t=r.spriteMosaic,a=t.getMosaicItemPosition(h,!0);a&&(t.bind(n,9729,a.page,e),b.setUniform2f(\"u_pattern_tl\",a.tl[0],a.br[1]),b.setUniform2f(\"u_pattern_br\",a.br[0],a.tl[1]),b.setUniform2f(\"u_spriteSize\",U*a.size[0],a.size[1]),b.setUniform1i(\"u_texture\",e))}else{let t=p.getPaintValue(\"line-dasharray\",o);t.length<2&&(t=[1,-1]);const e=U;this._dashArray[0]=e*t[0],this._dashArray[1]=e*t[1],b.setUniform2fv(\"u_dasharray\",this._dashArray)}let P=-1;for(const e of s){if(!e.layerData.has(d))continue;e.key.level!==P&&(P=e.key.level,u.setDataUniforms(b,o,p,P));const r=e.layerData.get(d);r.prepareForRendering(n);const a=r.lineVertexArrayObject;t(a)||(n.bindVAO(a),b.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),n.setStencilFunction(514,e.stencilRef,255),n.drawElements(4,r.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.lineIndexStart),e.triangleCount+=r.lineIndexCount/3)}}}export{n as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../../../core/maybe.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e,VTL_TEXTURE_BINDING_UNIT_GLYPHS as a}from\"../definitions.js\";import{c as i,f as r}from\"../../../../../chunks/vec2f32.js\";import{FADE_DURATION as n}from\"../../vectorTiles/decluttering/config.js\";import{u32to4Xu8 as s}from\"../number.js\";import{WGLDrawPhase as o}from\"../enums.js\";import l from\"./WGLBrush.js\";import{degToByte as f}from\"../GeometryUtils.js\";const c=1/65536;class p extends l{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=i()}dispose(){}drawMany(t,e){const{drawPhase:a,styleLayerUID:i}=t,r=t.styleLayer;let n;a===o.HITTEST&&(n=s(i+1)),this._drawIcons(t,r,e,n),this._drawText(t,r,e,n)}_drawIcons(a,i,r,s){const{context:l,displayLevel:c,drawPhase:p,painter:u,state:m,styleLayerUID:d}=a,g=i.iconMaterial,y=u.vectorTilesMaterialManager;let _,h=!1;for(const t of r)if(t.layerData.has(d)&&(_=t.layerData.get(d),_.iconPerPageElementsMap.size>0)){h=!0;break}if(!h)return;const M=i.getPaintValue(\"icon-translate\",c),U=i.getPaintValue(\"icon-translate-anchor\",c);let P=i.getLayoutValue(\"icon-rotation-alignment\",c);2===P&&(P=0===i.getLayoutValue(\"symbol-placement\",c)?1:0);const x=0===P,v=i.getLayoutValue(\"icon-keep-upright\",c)&&x,T=_.isIconSDF,E=p===o.HITTEST,D=this._iconProgramOptions;D.id=E,D.sdf=T;const V=y.getMaterialProgram(l,g,D);l.bindProgram(V),V.setUniformMatrix3fv(\"u_displayViewMat3\",0===P?m.displayViewMat3:m.displayMat3),V.setUniformMatrix3fv(\"u_displayMat3\",1===U?m.displayMat3:m.displayViewMat3),V.setUniform2fv(\"u_iconTranslation\",M),V.setUniform1f(\"u_depth\",i.z),V.setUniform1f(\"u_mapRotation\",f(m.rotation)),V.setUniform1f(\"u_keepUpright\",v?1:0),V.setUniform1f(\"u_level\",10*c),V.setUniform1i(\"u_texture\",e),V.setUniform1f(\"u_fadeDuration\",n/1e3),E&&V.setUniform4fv(\"u_id\",s);let S=-1;for(const e of r){if(!e.layerData.has(d))continue;if(e.key.level!==S&&(S=e.key.level,g.setDataUniforms(V,c,i,S)),_=e.layerData.get(d),0===_.iconPerPageElementsMap.size)continue;_.prepareForRendering(l),_.updateOpacityInfo();const r=_.iconVertexArrayObject;if(!t(r)){l.bindVAO(r),V.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),V.setUniform1f(\"u_time\",(performance.now()-_.lastOpacityUpdate)/1e3);for(const[t,i]of _.iconPerPageElementsMap)this._renderIconRange(a,V,i,t,e)}}}_renderIconRange(t,a,i,r,n){const{context:s,spriteMosaic:o}=t;this._spritesTextureSize[0]=o.getWidth(r)/4,this._spritesTextureSize[1]=o.getHeight(r)/4,a.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(s,9729,r,e),s.setStencilTestEnabled(!0),s.setStencilFunction(516,255,255),s.setStencilWriteMask(0),s.drawElements(4,i[1],5125,Uint32Array.BYTES_PER_ELEMENT*i[0]),n.triangleCount+=i[1]/3}_drawText(e,i,s,l){const{context:p,displayLevel:u,drawPhase:m,glyphMosaic:d,painter:g,pixelRatio:y,state:_,styleLayerUID:h}=e,M=i.textMaterial,U=g.vectorTilesMaterialManager;let P,x=!1;for(const t of s)if(t.layerData.has(h)&&(P=t.layerData.get(h),P.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const v=i.getPaintProperty(\"text-opacity\");if(v&&!v.isDataDriven&&0===v.getValue(u))return;const T=i.getPaintProperty(\"text-color\"),E=!T||T.isDataDriven||T.getValue(u)[3]>0,D=i.getPaintProperty(\"text-halo-width\"),V=i.getPaintProperty(\"text-halo-color\"),S=(!D||D.isDataDriven||D.getValue(u)>0)&&(!V||V.isDataDriven||V.getValue(u)[3]>0);if(!E&&!S)return;const w=24/8;let b=i.getLayoutValue(\"text-rotation-alignment\",u);2===b&&(b=0===i.getLayoutValue(\"symbol-placement\",u)?1:0);const L=0===b,z=i.getLayoutValue(\"text-keep-upright\",u)&&L,k=m===o.HITTEST,I=.8*w/y;this._glyphTextureSize||(this._glyphTextureSize=r(d.width/4,d.height/4));const O=i.getPaintValue(\"text-translate\",u),R=i.getPaintValue(\"text-translate-anchor\",u),j=this._sdfProgramOptions;j.id=k;const A=U.getMaterialProgram(p,M,j);p.bindProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",0===b?_.displayViewMat3:_.displayMat3),A.setUniformMatrix3fv(\"u_displayMat3\",1===R?_.displayMat3:_.displayViewMat3),A.setUniform2fv(\"u_textTranslation\",O),A.setUniform1f(\"u_depth\",i.z+c),A.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),A.setUniform1f(\"u_mapRotation\",f(_.rotation)),A.setUniform1f(\"u_keepUpright\",z?1:0),A.setUniform1f(\"u_level\",10*u),A.setUniform1i(\"u_texture\",a),A.setUniform1f(\"u_antialiasingWidth\",I),A.setUniform1f(\"u_fadeDuration\",n/1e3),k&&A.setUniform4fv(\"u_id\",l);let F=-1;for(const a of s){if(!a.layerData.has(h))continue;if(a.key.level!==F&&(F=a.key.level,M.setDataUniforms(A,u,i,F)),P=a.layerData.get(h),0===P.glyphPerPageElementsMap.size)continue;P.prepareForRendering(p),P.updateOpacityInfo();const e=P.textVertexArrayObject;if(t(e))continue;p.bindVAO(e),A.setUniformMatrix3fv(\"u_dvsMat3\",a.transforms.dvs),p.setStencilTestEnabled(!0),p.setStencilFunction(516,255,255),p.setStencilWriteMask(0);const r=(performance.now()-P.lastOpacityUpdate)/1e3;A.setUniform1f(\"u_time\",r),P.glyphPerPageElementsMap.forEach(((t,e)=>{this._renderGlyphRange(p,t,e,d,A,S,E,a)}))}}_renderGlyphRange(t,e,i,r,n,s,o,l){r.bind(t,9729,i,a),s&&(n.setUniform1f(\"u_halo\",1),t.drawElements(4,e[1],5125,Uint32Array.BYTES_PER_ELEMENT*e[0]),l.triangleCount+=e[1]/3),o&&(n.setUniform1f(\"u_halo\",0),t.drawElements(4,e[1],5125,Uint32Array.BYTES_PER_ELEMENT*e[0]),l.triangleCount+=e[1]/3)}}export{p as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../../../core/maybe.js\";import{TEXTURE_BINDING_ATTRIBUTE_DATA_0 as e,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as i,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as a,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as r}from\"../definitions.js\";import s from\"./WGLBrush.js\";class n extends s{prepareState({context:t},e,i){const a=i&&-1!==i.indexOf(\"id\");t.setBlendingEnabled(!a),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(514,e.stencilRef,255)}draw(e,i,a){const r=this.getGeometryType();i.commit(e);const s=i.getGeometry(r);t(s)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),s.forEachCommand((t=>this.drawGeometry(e,i,t,a))))}_setSharedUniforms(t,s,n){t.setUniform1f(\"u_pixelRatio\",s.pixelRatio),t.setUniformMatrix3fv(\"u_dvsMat3\",n.transforms.dvs),t.setUniformMatrix3fv(\"u_displayViewMat3\",s.state.displayViewMat3),t.setUniform1i(\"u_attributeTextureSize\",s.attributeView.size),t.setUniform1i(\"u_attributeData0\",e),t.setUniform1i(\"u_attributeData1\",i),t.setUniform1i(\"u_attributeData2\",a),t.setUniform1i(\"u_attributeData3\",r)}}export default n;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import e from\"../../../../../core/RandomLCG.js\";import{TEXTURE_BINDING_RENDERER_0 as t,TEXTURE_BINDING_RENDERER_1 as o,TILE_SIZE as i}from\"../definitions.js\";import\"../../../../../chunks/builtins.js\";import\"../../../../webgl/checkWebGLError.js\";import r from\"../../../../webgl/Texture.js\";import\"../../../../webgl/FramebufferObject.js\";import{WGLGeometryType as s}from\"../enums.js\";import{FillMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{createProgramDescriptor as n}from\"../Utils.js\";import l from\"./WGLGeometryBrush.js\";const d=e=>n(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:5122},{location:1,name:\"a_id\",count:4,type:5121},...e.dotDensity?[]:[{location:2,name:\"a_color\",count:4,type:5121,normalized:!0},{location:3,name:\"a_tlbr\",count:4,type:5123},{location:4,name:\"a_aux1\",count:4,type:5121},{location:5,name:\"a_aux2\",count:2,type:5123},{location:6,name:\"a_aux3\",count:4,type:5121}],...e.dotDensity?[{location:2,name:\"a_inverseArea\",count:1,type:5126}]:[]]});class u extends l{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([t,o])}dispose(){this._disposeTextures()}getGeometryType(){return s.FILL}drawGeometry(e,t,o,r){const{context:s,painter:n,rendererInfo:l,requiredLevel:u}=e,m=a.load(o.materialKey),{bufferLayouts:c,attributes:_}=d(m),f=n.materialManager.getMaterialProgram(e,m,\"materials/fill\",_,r);if(s.bindProgram(f),this._setSharedUniforms(f,e,t),m.textureBinding){n.textureManager.bindTextures(s,f,m);const o=1/2**(u-t.key.level)/e.pixelRatio;f.setUniform1f(\"u_zoomFactor\",o)}if(m.vvColor&&(f.setUniform1fv(\"u_vvColorValues\",l.vvColorValues),f.setUniform4fv(\"u_vvColors\",l.vvColors)),m.vvOpacity&&(f.setUniform1fv(\"u_vvOpacityValues\",l.vvOpacityValues),f.setUniform1fv(\"u_vvOpacities\",l.vvOpacities)),m.dotDensity){const o=i/l.ddDotSize,r=o*window.devicePixelRatio*o*window.devicePixelRatio,a=1/2**(u-t.key.level),n=1/a*(1/a),d=l.ddDotScale?e.state.scale/l.ddDotScale:1;f.setUniform1f(\"u_tileZoomFactor\",a),f.setUniform1f(\"u_tileDotsOverArea\",r/(i*window.devicePixelRatio*i*window.devicePixelRatio)),f.setUniformMatrix4fv(\"u_dotColors\",l.ddColors),f.setUniform4fv(\"u_isActive\",l.ddActiveDots),f.setUniform4fv(\"u_dotBackgroundColor\",l.ddBackgroundColor),f.setUniform1f(\"u_dotValue\",Math.max(1,l.ddDotValue*d*n)),this._bindDotDensityTextures(s,f,l,o)}o.draw(s,c,_)}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,i){const r=this._createDotDensityTextures(e,i,o.ddSeed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let s=0;s<r.length;s++)e.bindTexture(r[s],this._dotSamplers[s])}_createDotDensityTextures(t,o,i){if(this._dotTextureSize===o&&this._seed===i||(this._disposeTextures(),this._dotTextureSize=o,this._seed=i),null===this._dotTextures){const r=new e(i);this._dotTextures=[this._allocDotDensityTexture(t,o,r),this._allocDotDensityTexture(t,o,r)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const i=new Float32Array(t*t*4);for(let r=0;r<i.length;r++)i[r]=o.getFloat();return new r(e,{wrapMode:10497,pixelFormat:6408,dataType:5126,samplingMode:9728,width:t,height:t},i)}}export default u;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{LabelMaterialKey as t}from\"../materialKey/MaterialKey.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";const i=e=>a(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:5122},{location:1,name:\"a_id\",count:4,type:5121},{location:2,name:\"a_color\",count:4,type:5121,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:5121,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:5121},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:5121},{location:6,name:\"a_glyphData\",count:4,type:5121},{location:7,name:\"a_vertexOffset\",count:2,type:5122},{location:8,name:\"a_texCoords\",count:2,type:5123}]});class n extends o{dispose(){}getGeometryType(){return e.LABEL}drawGeometry(e,a,o,n){const{context:l,painter:s,state:r,rendererInfo:m}=e,u=t.load(o.materialKey),f=u.mapAligned?1:0;if(!f&&Math.abs(a.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:c,attributes:v}=i(u),d=s.materialManager.getMaterialProgram(e,u,\"materials/label\",v,n);e.context.setStencilFunction(514,0,255),l.bindProgram(d),this._setSharedUniforms(d,e,a),s.textureManager.bindTextures(l,d,u);const p=1===f?r.displayViewMat3:r.displayMat3;if(u.vvSizeMinMaxValue&&d.setUniform4fv(\"u_vvSizeMinMaxValue\",m.vvSizeMinMaxValue),u.vvSizeScaleStops&&d.setUniform1f(\"u_vvSizeScaleStopsValue\",m.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=m.getSizeVVFieldStops(a.key.level);d.setUniform1fv(\"u_vvSizeFieldStopsValues\",e.values),d.setUniform1fv(\"u_vvSizeFieldStopsSizes\",e.sizes)}u.vvSizeUnitValue&&d.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",m.vvSizeUnitValueToPixelsRatio),d.setUniform1f(\"u_mapRotation\",Math.floor(r.rotation/360*254)),d.setUniform1f(\"u_mapAligned\",f),d.setUniformMatrix3fv(\"u_displayMat3\",p),d.setUniform1f(\"u_opacity\",1),d.setUniform1f(\"u_zoomLevel\",Math.round(10*e.displayLevel)),d.setUniform2fv(\"u_screenSize\",e.state.size),d.setUniform1f(\"u_isHalo\",1),o.draw(l,c,v),d.setUniform1f(\"u_isHalo\",0),o.draw(l,c,v),l.setStencilTestEnabled(!0),l.setBlendingEnabled(!0)}}export default n;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{LineMaterialKey as t}from\"../materialKey/MaterialKey.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";const i=e=>a(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:5122},{location:1,name:\"a_id\",count:4,type:5121},{location:2,name:\"a_color\",count:4,type:5121,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:5120},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:5123},{location:5,name:\"a_tlbr\",count:4,type:5123},{location:6,name:\"a_segmentDirection\",count:4,type:5120},{location:7,name:\"a_aux\",count:2,type:5123}]});class n extends o{dispose(){}getGeometryType(){return e.LINE}drawGeometry(e,a,o,n){const{context:l,painter:r,rendererInfo:s,requiredLevel:v}=e,u=t.load(o.materialKey),{bufferLayouts:m,attributes:c}=i(u),f=r.materialManager.getMaterialProgram(e,u,\"materials/line\",c,n),p=1/e.pixelRatio,d=0;l.bindProgram(f),this._setSharedUniforms(f,e,a),u.textureBinding&&r.textureManager.bindTextures(l,f,u);const S=2**(v-a.key.level)/e.pixelRatio;if(f.setUniform1f(\"u_zoomFactor\",S),f.setUniform1f(\"u_blur\",d+p),f.setUniform1f(\"u_antialiasing\",p),u.vvSizeMinMaxValue&&f.setUniform4fv(\"u_vvSizeMinMaxValue\",s.vvSizeMinMaxValue),u.vvSizeScaleStops&&f.setUniform1f(\"u_vvSizeScaleStopsValue\",s.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=s.getSizeVVFieldStops(a.key.level);f.setUniform1fv(\"u_vvSizeFieldStopsValues\",e.values),f.setUniform1fv(\"u_vvSizeFieldStopsSizes\",e.sizes)}u.vvSizeUnitValue&&f.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",s.vvSizeUnitValueToPixelsRatio),u.vvColor&&(f.setUniform1fv(\"u_vvColorValues\",s.vvColorValues),f.setUniform4fv(\"u_vvColors\",s.vvColors)),u.vvOpacity&&(f.setUniform1fv(\"u_vvOpacityValues\",s.vvOpacityValues),f.setUniform1fv(\"u_vvOpacities\",s.vvOpacities)),l.setFaceCullingEnabled(!0),l.setFrontFace(2305),l.setCullFace(1029),o.draw(l,m,c),l.setFaceCullingEnabled(!1)}}export default n;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{MarkerMaterialKey as t}from\"../materialKey/MaterialKey.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";const i=e=>o(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:5122},{location:1,name:\"a_vertexOffset\",count:2,type:5122},{location:2,name:\"a_texCoords\",count:2,type:5123},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:5123},{location:4,name:\"a_id\",count:4,type:5121},{location:5,name:\"a_color\",count:4,type:5121,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:5121,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:5121}]});class n extends a{dispose(){}getGeometryType(){return e.MARKER}drawGeometry(e,o,a,n){const{context:r,painter:s,rendererInfo:v,state:l}=e,u=t.load(a.materialKey),{bufferLayouts:m,attributes:p}=i(u),f=s.materialManager.getMaterialProgram(e,u,\"materials/icon\",p,n);r.bindProgram(f),u.textureBinding&&s.textureManager.bindTextures(r,f,u,!0),this._setSharedUniforms(f,e,o);const c=u.vvRotation?l.displayViewMat3:l.displayMat3;if(f.setUniformMatrix3fv(\"u_displayMat3\",c),u.vvSizeMinMaxValue&&f.setUniform4fv(\"u_vvSizeMinMaxValue\",v.vvSizeMinMaxValue),u.vvSizeScaleStops&&f.setUniform1f(\"u_vvSizeScaleStopsValue\",v.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=v.getSizeVVFieldStops(o.key.level);f.setUniform1fv(\"u_vvSizeFieldStopsValues\",e.values),f.setUniform1fv(\"u_vvSizeFieldStopsSizes\",e.sizes)}u.vvSizeUnitValue&&f.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",v.vvSizeUnitValueToPixelsRatio),u.vvColor&&(f.setUniform1fv(\"u_vvColorValues\",v.vvColorValues),f.setUniform4fv(\"u_vvColors\",v.vvColors)),u.vvOpacity&&(f.setUniform1fv(\"u_vvOpacityValues\",v.vvOpacityValues),f.setUniform1fv(\"u_vvOpacities\",v.vvOpacities)),u.vvRotation&&f.setUniform1f(\"u_vvRotationType\",\"geographic\"===v.vvMaterialParameters.vvRotationType?0:1),a.draw(r,m,p)}}export default n;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{TextMaterialKey as t}from\"../materialKey/MaterialKey.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";const i=e=>a(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:5122},{location:1,name:\"a_id\",count:4,type:5121},{location:2,name:\"a_color\",count:4,type:5121,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:5121,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:5121},{location:5,name:\"a_aux\",count:4,type:5120},{location:6,name:\"a_vertexOffset\",count:2,type:5122},{location:7,name:\"a_texCoords\",count:2,type:5123}]});class r extends o{dispose(){}getGeometryType(){return e.TEXT}drawGeometry(e,a,o,r){const{context:s,painter:n,rendererInfo:v,state:l}=e,u=t.load(o.materialKey),{bufferLayouts:m,attributes:f}=i(u),p=n.materialManager.getMaterialProgram(e,u,\"materials/text\",f,r);if(s.bindProgram(p),this._setSharedUniforms(p,e,a),n.textureManager.bindTextures(s,p,u),p.setUniformMatrix3fv(\"u_displayMat3\",l.displayMat3),p.setUniformMatrix3fv(\"u_displayViewMat3\",l.displayViewMat3),u.vvSizeMinMaxValue&&p.setUniform4fv(\"u_vvSizeMinMaxValue\",v.vvSizeMinMaxValue),u.vvSizeScaleStops&&p.setUniform1f(\"u_vvSizeScaleStopsValue\",v.vvSizeScaleStopsValue),u.vvSizeFieldStops){const e=v.getSizeVVFieldStops(a.key.level);p.setUniform1fv(\"u_vvSizeFieldStopsValues\",e.values),p.setUniform1fv(\"u_vvSizeFieldStopsSizes\",e.sizes)}u.vvSizeUnitValue&&p.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",v.vvSizeUnitValueToPixelsRatio),u.vvColor&&(p.setUniform1fv(\"u_vvColorValues\",v.vvColorValues),p.setUniform4fv(\"u_vvColors\",v.vvColors)),u.vvOpacity&&(p.setUniform1fv(\"u_vvOpacityValues\",v.vvOpacityValues),p.setUniform1fv(\"u_vvOpacities\",v.vvOpacities)),u.vvRotation&&p.setUniform1f(\"u_vvRotationType\",\"geographic\"===v.vvMaterialParameters.vvRotationType?0:1),p.setUniform1f(\"u_isHalo\",1),o.draw(s,m,f),p.setUniform1f(\"u_isHalo\",0),o.draw(s,m,f)}}export default r;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{setTextures as t,getCommonUniforms as e,setUniforms as r,getColormapUniforms as s,getStretchUniforms as a,getShadedReliefUniforms as i,getUniformLocationInfos as o,getBasicGridUniforms as n}from\"../../../../../webgl/rasterUtils.js\";import h from\"../../VertexStream.js\";import c from\"../WGLBrush.js\";class l extends c{constructor(){super(...arguments),this._desc={lut:{vsPath:\"raster/lut\",fsPath:\"raster/lut\",attributes:{a_position:0,a_texcoord:1}},stretch:{vsPath:\"raster/stretch\",fsPath:\"raster/stretch\",attributes:{a_position:0,a_texcoord:1}},hillshade:{vsPath:\"raster/hillshade\",fsPath:\"raster/hillshade\",attributes:{a_position:0,a_texcoord:1}}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:t},e){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(514,e.stencilRef,255)}draw(t,e){var r;if(!e.source)return;if(e.suspended)return;t.timeline.begin(this.name);const s=!(null!=(r=t.context.capabilities.textureFloat)&&r.textureFloatLinear);e.updateTexture(t);const a=this.getShaderVariations(e,s),i=t.painter.materialManager.getProgram(t,this._desc[e.symbolizerParameters.type],a);this.drawWithProgram(t.context,i,e),t.timeline.end(this.name)}drawWithProgram(o,c,l,d=1,u=[0,0],p=!1){this._quad||(this._quad=new h(o,[0,0,1,0,0,1,1,1]));const{symbolizerParameters:m,transformGrid:f,width:g,height:_,opacity:b}=l,x=m.type;o.bindProgram(c);const P=this.getShaderVariations(l),S=this.getUniformInfos(x,o,c,P),{names:y,textures:w}=l.getTextures();t(o,c,y,w);const U=n(d,u),v=e(f,[g,_],[l.source.width,l.source.height],b,p);if(r(c,S,{u_coordScale:l.coordScale,u_dvsMat3:l.transforms.dvs,...U,...v}),m.colormap){const{colormap:t,colormapOffset:e}=m,a=s(t,e);r(c,S,a)}if(\"stretch\"===m.type){const t=a(m);r(c,S,t)}else if(\"hillshade\"===m.type){const t=i(m);r(c,S,t)}this._quad.draw()}getUniformInfos(t,e,r,s){const a=s.length>0?t+\"-\"+s.join(\"-\"):t;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=o(e,r);return this._rendererUniformInfos.set(a,i),i}getShaderVariations(t,e=!1){const r=[];return\"cubic\"===t.interpolation?r.push(\"bicubic\"):e&&\"bilinear\"===t.interpolation&&r.push(\"bilinear\"),t.isRendereredSource?r.push(\"noop\"):t.symbolizerParameters.colormap&&r.push(\"applyColormap\"),t.transformGrid&&r.push(\"applyProjection\"),r}}export default l;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/WGLBrushInfo.js\";import l from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as o}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as t}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as m}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as b}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as i}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import u from\"./webgl/brushes/WGLGeometryBrushFill.js\";import h from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import L from\"./webgl/brushes/WGLGeometryBrushLine.js\";import p from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import B from\"./webgl/brushes/WGLGeometryBrushText.js\";import f from\"./webgl/brushes/raster/BrushRasterBitmap.js\";const g={marker:p,line:L,fill:u,text:B,label:h,clip:s,stencil:l,bitmap:r,raster:f,tileInfo:e,vtlBackground:o,vtlFill:m,vtlLine:b,vtlCircle:t,vtlSymbol:i},G={vtlBackground:o,vtlFill:m,vtlLine:b,vtlCircle:t,vtlSymbol:i};export{g as brushes,G as vtlBrushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this.readFile=e}resolveIncludes(e){return this.resolve(e)}resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this.read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this.resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}read(e){return this.readFile(e)}}export default e;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:{a_pos:0}};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import{f as t}from\"../../../../../chunks/vec4f32.js\";import\"../../../../../chunks/builtins.js\";import e from\"../../../../webgl/BufferObject.js\";import r from\"../../../../webgl/Texture.js\";import i from\"../../../../webgl/VertexArrayObject.js\";import\"../../../../webgl/FramebufferObject.js\";import{createProgram as o}from\"../../../../webgl/programUtils.js\";import s from\"./WGLBrush.js\";import{background as n}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as a}from\"../shaders/TileInfoPrograms.js\";const l=300,u=32;class m extends s{constructor(){super(...arguments),this._color=t(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r}=t;if(!e.isReady)return;this._loadWGLResources(r),r.bindVAO(this._outlineVertexArrayObject),r.bindProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",e.coordRange[0],e.coordRange[1]),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),r.drawArrays(3,0,4),r.bindVAO();const i=this._getTexture(r,e);i&&(r.bindVAO(this._tileInfoVertexArrayObject),r.bindProgram(this._tileInfoProgram),r.bindTexture(i,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.coordRange[0]/e.size[0],e.coordRange[1]/e.size[1]),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",i.descriptor.width,i.descriptor.height),r.drawArrays(5,0,4),r.bindVAO())}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=o(t,n),s=o(t,a),l={geometry:[{name:\"a_pos\",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},u=new Int8Array([0,0,1,0,1,1,0,1]),m=e.createVertex(t,35044,u),c=new i(t,n.attributes,l,{geometry:m}),f=new Int8Array([0,0,1,0,0,1,1,1]),d=e.createVertex(t,35044,f),g=new i(t,a.attributes,l,{geometry:d});this._outlineProgram=r,this._tileInfoProgram=s,this._outlineVertexArrayObject=c,this._tileInfoVertexArrayObject=g}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"canvas2d\"),this._canvas.setAttribute(\"width\",`${l}`),this._canvas.setAttribute(\"height\",`${u}`),this._canvas.setAttribute(\"style\",\"display:none\"));const i=e.triangleCount;let o=e.key.id;e.triangleCount>0&&(o+=`, ${i}`);const s=this._canvas,n=s.getContext(\"2d\");return n.font=\"24px sans-serif\",n.textAlign=\"left\",n.textBaseline=\"top\",n.clearRect(0,0,l,u),i>1e5?(n.fillStyle=\"red\",n.fillRect(0,0,l,u),n.fillStyle=\"black\"):(n.clearRect(0,0,l,u),n.fillStyle=\"blue\"),n.fillText(o,0,0),e.texture=new r(t,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071},s),e.texture}}export default m;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import\"../../../../core/mathUtils.js\";import\"../../../../chunks/builtins.js\";import t from\"../../../webgl/BufferObject.js\";import e from\"../../../webgl/VertexArrayObject.js\";import\"../../../webgl/FramebufferObject.js\";class r{constructor(r,i){this.rctx=r,this._vertexBuffer=t.createVertex(r,35044,new Uint16Array(i)),this._vao=new e(r,{a_position:0},{geometry:[{name:\"a_position\",count:2,type:5122,offset:0,stride:4,normalized:!1}]},{geometry:this._vertexBuffer})}bind(){this._vao.bind()}unbind(){this._vao.unbind()}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(5,0,4)}}export default r;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nvar e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\n  gl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\n  vec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\n  gl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\n  lowp vec4 color = texture2D(u_tex, v_uv);\\n  gl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\n  gl_Position = vec4(a_pos, 0.0, 1.0);\\n  v_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\n  return max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n  vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\n  vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\n  float d = q.x - min(q.w, q.y);\\n  float e = 1.0e-10;\\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\n  float vIn = rgb2v(Cb);\\n  vec3 hsvTint = rgb2hsv(Cs);\\n  vec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\n  return hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\n  return (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\n  return (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\n return (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\n  return (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\n\\treturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\n  if (Cs <= 0.5) {\\n    return Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n  }\\n  if (Cb <= 0.25) {\\n    return Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n  }\\n  return Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\n  return (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\n  return min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\n  return max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\n  return dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\n  return maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\n  float lum = lumv3(color);\\n  float mincol = minv3(color);\\n  float maxcol = maxv3(color);\\n  if (mincol < 0.0) {\\n    color = lum + ((color - lum) * lum) / (lum - mincol);\\n  }\\n  if (maxcol > 1.0) {\\n    color = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n  }\\n  return color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\n  float lbase = lumv3(cbase);\\n  float llum = lumv3(clum);\\n  float ldiff = llum - lbase;\\n  vec3 color = cbase + vec3(ldiff);\\n  return clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\n  float minbase = minv3(cbase);\\n  float sbase = satv3(cbase);\\n  float ssat = satv3(csat);\\n  vec3 color;\\n  if (sbase > 0.0) {\\n    color = (cbase - minbase) * ssat / sbase;\\n  } else {\\n    color = vec3(0.0);\\n  }\\n  return setLum(color, clum);\\n}\\nvoid main() {\\n  vec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\n  gl_FragColor = src *  u_opacity;\\n#else\\n  vec4 dst = texture2D(u_backbufferTexture, v_uv);\\n  vec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\n  vec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\n  float as = u_opacity * src.a;\\n  float ab = dst.a;\\n  #ifdef DESTINATION_OVER\\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n  #endif\\n  #ifdef SOURCE_IN\\n    vec4 color = vec4(as * Cs * ab, as * ab);\\n    vec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\n    gl_FragColor = color + fadeColor;\\n  #endif\\n  #ifdef DESTINATION_IN\\n    vec4 color = vec4(ab * Cb * as, ab * as);\\n    vec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\n    gl_FragColor = color + fadeColor;\\n  #endif\\n  #ifdef SOURCE_OUT\\n    gl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n  #endif\\n  #ifdef DESTINATION_OUT\\n    gl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n  #endif\\n  #ifdef SOURCE_ATOP\\n    gl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n  #endif\\n  #ifdef DESTINATION_ATOP\\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n  #endif\\n  #ifdef XOR\\n    gl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\n                        as * (1.0 - ab) + ab * (1.0 - as));\\n  #endif\\n  #ifdef MULTIPLY\\n    gl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef SCREEN\\n    gl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef OVERLAY\\n    vec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef DARKEN\\n    gl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef LIGHTER\\n    gl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n  #endif\\n  #ifdef LIGHTEN\\n    gl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef COLOR_DODGE\\n    vec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef COLOR_BURN\\n    vec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef HARD_LIGHT\\n    vec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef SOFT_LIGHT\\n    vec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef DIFFERENCE\\n    gl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef EXCLUSION\\n     vec3 f = Cs + Cb - 2.0 * Cs * Cb;\\n     gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef INVERT\\n    gl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n  #endif\\n  #ifdef VIVID_LIGHT\\n    vec3 f = vec3(vividLight(Cb.r, Cs.r),\\n                  vividLight(Cb.g, Cs.g),\\n                  vividLight(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef HUE\\n    vec3 f = setLumSat(Cs,Cb,Cb);\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef SATURATION\\n    vec3 f = setLumSat(Cb,Cs,Cb);\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef COLOR\\n    vec3 f = setLum(Cs,Cb);\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef LUMINOSITY\\n    vec3 f = setLum(Cb,Cs);\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef PLUS\\n    gl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n  #endif\\n  #ifdef MINUS\\n     gl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n  #endif\\n  #ifdef AVERAGE\\n     vec3 f = (Cb + Cs) / 2.0;\\n     gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n  #ifdef REFLECT\\n    vec3 f = vec3(reflectBlend(Cb.r, Cs.r),\\n                  reflectBlend(Cb.g, Cs.g),\\n                  reflectBlend(Cb.b, Cs.b));\\n    gl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\n                        as + ab * (1.0 - as));\\n  #endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\n  gl_Position = vec4(a_position , 0.0, 1.0);\\n  v_uv = (a_position + 1.0) / 2.0;\\n}\"},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\n  float b = 1.0 / 6.0;\\n  float v2 = v * v;\\n  float v3 = v2 * v;\\n  float w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\n  float w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\n  float w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\n  float w3 = b * v3;\\n  return vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\n  vec4 w = computeWeights(v);\\n  float g0 = w.x + w.y;\\n  float g1 = w.z + w.w;\\n  float h0 = 1.0 - (w.y / g0) + v;\\n  float h1 = 1.0 + (w.w / g1) - v;\\n  return vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\n  vec2 eX = vec2(1.0 / texSize.x, 0.0);\\n  vec2 eY = vec2(0.0, 1.0 / texSize.y);\\n  vec2 texel = coords * texSize - 0.5;\\n  vec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\n  vec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\n  vec2 coords10 = coords + hgX.x * eX;\\n  vec2 coords00 = coords - hgX.y * eX;\\n  vec2 coords11 = coords10 + hgY.x * eY;\\n  vec2 coords01 = coords00 + hgY.x * eY;\\n  coords10 = coords10 - hgY.y * eY;\\n  coords00 = coords00 - hgY.y * eY;\\n  vec4 color00 = texture2D(sampler, coords00);\\n  vec4 color10 = texture2D(sampler, coords10);\\n  vec4 color01 = texture2D(sampler, coords01);\\n  vec4 color11 = texture2D(sampler, coords11);\\n  color00 = mix(color00, color01, hgY.z);\\n  color10 = mix(color10, color11, hgY.z);\\n  color00 = mix(color00, color10, hgX.z);\\n  return color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\n  vec2 texelStart = floor(coords * texSize);\\n  vec2 coord0 = texelStart / texSize;\\n  vec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\n  vec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\n  vec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\n  vec4 color0 = texture2D(sampler, coord0);\\n  vec4 color1 = texture2D(sampler, coord1);\\n  vec4 color2 = texture2D(sampler, coord2);\\n  vec4 color3 = texture2D(sampler, coord3);\\n  vec2 blend = fract(coords * texSize);\\n  vec4 color01 = mix(color0, color1, blend.x);\\n  vec4 color23 = mix(color2, color3, blend.x);\\n  return mix(color01, color23, blend.y);\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\n  vec2 invSize = 1.0 / texSize;\\n  vec2 texel = coords * texSize;\\n  vec2 texel_i = floor(texel);\\n  vec2 texel_frac = fract(texel);\\n  vec4 colorP = texture2D(sampler, texel_i * invSize);\\n  vec4 colorP1 = vec4(colorP);\\n  vec4 colorP2 = vec4(colorP);\\n  vec4 colorP3 = vec4(colorP);\\n  vec4 colorP4 = vec4(colorP);\\n  vec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\n  vec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\n  vec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\n  vec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\n  if (colorC == colorA && colorC != colorD && colorA != colorB) {\\n    colorP1 = colorA;\\n  }\\n  if (colorA == colorB && colorA != colorC && colorB != colorD) {\\n    colorP2 = colorB;\\n  }\\n  if (colorD == colorC && colorD != colorB && colorC != colorA) {\\n    colorP3 = colorC;\\n  }\\n  if (colorB == colorD && colorB != colorA && colorD != colorC) {\\n    colorP4 = colorD;\\n  }\\n  vec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\n  vec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\n  return mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\n  vec4 texel = texture2D(u_sourceTexture, v_texcoord);\\n  vec4 data0 = texture2D(u_maskTexture, v_texcoord);\\n  float flags = data0.r * 255.0;\\n  float groupMinZoom = data0.g * 255.0;\\n  float isVisible = getFilterBit(flags, 0);\\n  float wouldClip = step(groupMinZoom, u_zoomLevel);\\n  float direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\n  float dt = u_timeDelta / max(u_animationTime, 0.0001);\\n  vec4 nextState = vec4(texel + direction * dt);\\n  gl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\n  vec4 texel = texture2D(u_sourceTexture, v_texcoord);\\n  gl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\n  v_texcoord = a_pos;\\n  gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump vec4 u_sigmas;\\nuniform sampler2D u_texture;\\nmediump vec4 gauss4(mediump vec2 dir) {\\n  return exp(-dot(dir, dir) / (2.0 * u_sigmas * u_sigmas));\\n}\\nmediump float gauss1(mediump vec2 dir) {\\n  return exp(-dot(dir, dir) / (2.0 * u_sigmas[3] * u_sigmas[3]));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\n  return u_channelSelector * sample;\\n}\\nvoid accumGauss4(mediump float i, inout mediump vec4 tot, inout mediump vec4 weight) {\\n  mediump vec4 w = gauss4(i * u_direction.xy);\\n  tot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw)) * w;\\n  weight += w;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\n  mediump float w = gauss1(i * u_direction.xy);\\n  tot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\n  weight += w;\\n}\\nvoid main(void) {\\n  mediump float tot = 0.0;\\n  mediump float weight = 0.0;\\n  accumGauss1(-4.0, tot, weight);\\n  accumGauss1(-3.0, tot, weight);\\n  accumGauss1(-2.0, tot, weight);\\n  accumGauss1(-1.0, tot, weight);\\n  accumGauss1(0.0, tot, weight);\\n  accumGauss1(1.0, tot, weight);\\n  accumGauss1(2.0, tot, weight);\\n  accumGauss1(3.0, tot, weight);\\n  accumGauss1(4.0, tot, weight);\\n  gl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump vec4 u_sigmas;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\n  mediump float sigma = u_sigmas[3];\\n  mediump float y = texture2D(u_texture, v_texcoord)[3];\\n  const mediump float y0 = 0.5;\\n  mediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * sigma);\\n  mediump float d = (y - y0) / m0;\\n  return d;\\n}\\nmediump vec4 shade(mediump float d) {\\n  mediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\n  mappedDistance = clamp(mappedDistance, 0.0, 1.0);\\n  return texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\n  mediump float d = estimateDistance();\\n  gl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\n  gl_Position = vec4(a_position, 0.0, 1.0);\\n  v_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\n  lowp vec2 uvn = uv * 2.0 - 1.0;\\n  if (uvn.x == 0.0 && uvn.y == 0.0) {\\n    return vec2(0.5, 0.5);\\n  }\\n  lowp float theta = atan(uvn.y, uvn.x);\\n  lowp float r = pow(length(uvn), barrelFactor);\\n  return r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\n  lowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\n  color = (color + (1.0 - color.a) * u_background);\\n  lowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\n  color *= mask;\\n  lowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\n  gl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\n  v_texCoord = a_pos;\\n  gl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec4 id) {\\n  highp vec4 texel = unpackDisplayIdTexel(id);\\n  highp float size = float(u_attributeTextureSize);\\n  highp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256 + int(texel.a) * 256 * 256 * 256);\\n  highp float col = mod(u32, size);\\n  highp float row = (u32 - col) / size;\\n  highp float u = col / size;\\n  highp float v = row / size;\\n  return vec2(u, v);\\n}\\nhighp vec4 getAttributeData0(in highp vec4 id) {\\n  vec2 coords = getAttributeDataCoords(id);\\n  return texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec4 id) {\\n  highp vec2 coords = getAttributeDataCoords(id);\\n  return texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec4 id) {\\n  highp vec2 coords = getAttributeDataCoords(id);\\n  return texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec4 id) {\\n  highp vec2 coords = getAttributeDataCoords(id);\\n  return texture2D(u_attributeData3, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\n  bool isMagic = v.x == 255.0 && v.y == 255.0;\\n  if (isMagic) {\\n    return NAN_MAGIC_NUMBER;\\n  }\\n  return (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.0000001;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\",fill:{\"common.glsl\":\"#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec4 v_id;\\nvarying highp float v_flags;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\nvoid main() {\\n#ifdef ID\\n  gl_FragColor = v_id;\\n#elif defined(PATTERN)\\n  mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\n  mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\n  lowp vec4 color = texture2D(u_texture, samplePos);\\n  gl_FragColor = v_opacity * v_color * color;\\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\\n  vec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\n  vec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\n  vec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\n  vec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\n  vec4 isPositive0 = step(0.0, difference0);\\n  vec4 isPositive1 = step(0.0, difference1);\\n  float weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\n  float lessThanEqZero = step(weightSum, 0.0);\\n  float greaterThanZero = 1.0 - lessThanEqZero ;\\n  float divisor = (weightSum + lessThanEqZero);\\n  vec4 weights0 = difference0 * isPositive0 / divisor;\\n  vec4 weights1 = difference1 * isPositive1 / divisor;\\n  vec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\n  vec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\n  float diffMax = max(max4(difference0), max4(difference1));\\n  float lessThanZero = step(diffMax, 0.0);\\n  float greaterOrEqZero = 1.0 - lessThanZero;\\n  vec4 isMax0 = step(diffMax, difference0);\\n  vec4 isMax1 = step(diffMax, difference1);\\n  vec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\n  vec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\n  gl_FragColor = preEffectColor;\\n#else\\n  gl_FragColor = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\n  gl_FragColor.a = 1.0;\\n#endif\\n}\",\"fill.vert\":\"precision highp float;\\n#ifdef DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec4 a_aux3 = vec4(0.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_aux1;\\nattribute vec2 a_aux2;\\nattribute vec4 a_aux3;\\n#endif\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\n  return featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\nvoid main()\\n{\\n  INIT;\\n  float a_bitSet = a_aux3.a;\\n  v_color     = getColor(a_color, a_bitSet, 0);\\n  v_opacity   = getOpacity();\\n  v_id        = norm(a_id);\\n  v_pos       = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n  v_flags     = getFilterFlags();\\n#ifdef PATTERN\\n  vec2 aux2 = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_aux2;\\n  float width = u_zoomFactor * a_aux1.x * aux2.x;\\n  float height = u_zoomFactor * a_aux1.y * aux2.y;\\n  float angle = C_256_TO_RAD * a_aux3.z;\\n  float sinA = sin(angle);\\n  float cosA = cos(angle);\\n  mat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n                           -sinA / width, cosA / height, 0,\\n                            0,            0,             1);\\n  vec2 symbolOffset = (a_aux1.zw - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\\n  v_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\n  v_tlbr = a_tlbr / u_mosaicSize.xyxy;\\n#elif defined(DOT_DENSITY)\\n  vec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\n  vec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\n  float size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\n  v_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\n  v_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\n  v_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n  gl_Position = vec4(applyFilter(v_color, v_pos, v_flags), 1.0);\\n}\"},icon:{\"common.glsl\":\"uniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec4 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying highp float v_filters;\\nvarying lowp float v_opacity;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/icon/common.glsl>\\nuniform lowp sampler2D u_texture;\\nvoid main()\\n{\\n  vec2 v_size = v_sizeTex.xy;\\n  vec2 v_tex  = v_sizeTex.zw;\\n#ifdef SDF\\n  lowp vec4 fillPixelColor = v_color;\\n  float d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\n  float size = max(v_size.x, v_size.y);\\n  float dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\n  fillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\n  float outlineWidth = v_outlineWidth;\\n  #ifdef HIGHLIGHT\\n    outlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n  #endif\\n  if (outlineWidth > 0.25) {\\n    lowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\n    float clampedOutlineSize = min(outlineWidth, size);\\n    outlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\n    gl_FragColor = v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n  }\\n  else {\\n    gl_FragColor = v_opacity * fillPixelColor;\\n  }\\n#else\\n   lowp vec4 texColor = texture2D(u_texture, v_tex);\\n   gl_FragColor = v_opacity * texColor;\\n#endif\\n#ifdef HIGHLIGHT\\n  gl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\\n#endif\\n#ifdef ID\\n  if (gl_FragColor.a < 1.0 / 255.0) {\\n    discard;\\n  }\\n  gl_FragColor = v_id;\\n#endif\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\n#ifdef VV_SIZE\\n  float r = getSize(baseSize.y) / referenceSize;\\n  baseSize.xy *= r;\\n  offset.xy *= r;\\n  float scaleSymbolProportionally = getBit(bitSet, 3);\\n  outlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\n  return baseSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\n  float isMapAligned = getBit(a_bitSet, 0);\\n  vec3  offset       = getRotation() * vec3(in_offset, 0.0);\\n  return getMatrix(isMapAligned) * offset;\\n}\\nvoid main()\\n{\\n  INIT;\\n  vec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\n  vec2  a_offset = a_vertexOffset / 16.0;\\n  float a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\n  float a_bitSet = a_bitSetAndDistRatio.x;\\n  vec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\n  vec2 v_tex      = a_texCoords / u_mosaicSize;\\n  v_color    = getColor(a_color, a_bitSet, 1);\\n  v_opacity  = getOpacity();\\n  v_id       = norm(a_id);\\n  v_filters  = getFilterFlags();\\n  v_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\\n  v_sizeTex  = vec4(v_size.xy, v_tex.xy);\\n#ifdef SDF\\n  v_isThin   = getBit(a_bitSet, 2);\\n  #ifdef VV_COLOR\\n    v_overridingOutlineColor = v_isThin;\\n  #else\\n    v_overridingOutlineColor = 0.0;\\n  #endif\\n  v_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\\n  v_outlineColor = a_outlineColor;\\n  v_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n  gl_Position = vec4(applyFilter(v_color, v_pos, v_filters), 1.0);\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_zoomLevel;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\n  float glyphAngle = angle * 360.0 / 254.0;\\n  float mapAngle = u_mapRotation * 360.0 / 254.0;\\n  float diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\n  float z = 0.0;\\n  z += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_zoomLevel)));\\n  z += u_mapAligned * 2.0 * step(90.0, diffAngle);\\n  z += 2.0 * (1.0 - step(u_zoomLevel, maxZoom));\\n  return z;\\n}\\nvoid main()\\n{\\n  INIT;\\n  float groupMinZoom    = getMinZoom();\\n  float glyphMinZoom    = a_glyphData.x;\\n  float glyphMaxZoom    = a_glyphData.y;\\n  float glyphAngle      = a_glyphData.z;\\n  float a_minZoom          = max(groupMinZoom, glyphMinZoom);\\n  float a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\n  vec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\n  float a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\n  float fontSize           = a_texAndSize.z;\\n  float haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\n  vec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\n  vec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\n  float z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\n  float fontScale    = fontSize / SDF_FONT_SIZE;\\n  float halfSize     = getSize(a_refSymbolSize) / 2.0;\\n  float animation    = pow(getAnimationState(), vec4(2.0)).r;\\n  v_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\n  v_opacity   = 1.0;\\n  v_tex       = a_texCoords / u_mosaicSize;\\n  v_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\n  v_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n  vec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\n  vec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\n  vec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\n  gl_Position = vec4(applyFilterLabels(v_color, v_pos, getFilterFlags()), 1.0);\\n#ifdef DEBUG\\n  v_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec4 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\nvarying highp vec3 v_pos;\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/line/common.glsl>\\nuniform lowp float u_blur;\\nuniform mediump float u_zoomFactor;\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\n#endif\\n#ifdef SDF\\nconst float sdfPatternHalfWidth = 15.5;\\nconst float widthFactor = 2.0;\\n#endif\\nvoid main()\\n{\\n  mediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(v_lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\n  mediump float fragDist = length(v_normal) * v_lineHalfWidth;\\n  lowp float alpha = clamp(thinLineFactor * (v_lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\n#if defined(SDF) && !defined(HIGHLIGHT)\\n  mediump float lineHalfWidth = widthFactor * v_lineHalfWidth;\\n  mediump float lineWidthRatio = lineHalfWidth / sdfPatternHalfWidth;\\n  mediump float relativeTexX = mod((u_zoomFactor * v_accumulatedDistance + v_normal.x * lineHalfWidth) / (lineWidthRatio * v_patternSize.x), 1.0);\\n  mediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\\n  mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\\n  mediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\n  float dist = d * lineHalfWidth;\\n  lowp vec4 fillPixelColor = v_opacity * alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\\n  gl_FragColor = fillPixelColor;\\n#elif defined(PATTERN) && !defined(HIGHLIGHT)\\n  mediump float lineHalfWidth = v_lineHalfWidth;\\n  mediump float adjustedPatternWidth = v_patternSize.x * 2.0 * lineHalfWidth / v_patternSize.y;\\n  mediump float relativeTexX = mod((u_zoomFactor * v_accumulatedDistance + v_normal.x * lineHalfWidth) / adjustedPatternWidth, 1.0);\\n  mediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\\n  mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexY, relativeTexX));\\n  lowp vec4 color = texture2D(u_texture, texCoord);\\n  gl_FragColor = v_opacity * alpha * v_color * color;\\n#else\\n  gl_FragColor = v_opacity * alpha * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\n  gl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\\n#endif\\n#ifdef ID\\n  if (gl_FragColor.a < 1.0 / 255.0) {\\n    discard;\\n  }\\n  gl_FragColor = v_id;\\n#endif\\n}\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\n#include <materials/vcommon.glsl>\\n#include <materials/line/common.glsl>\\nconst float SCALE = 1.0 / 31.0;\\nconst float WIDTH_SCALE = 1.0 / 1024.0;\\nfloat getBaseLineHalfWidth(in float in_lineHalfWidth) {\\n#ifdef VV_SIZE\\n  float referenceHalfWidth = a_aux.x * WIDTH_SCALE;\\n  float lineWidth = 2.0 * in_lineHalfWidth;\\n  return 0.5 * (in_lineHalfWidth / referenceHalfWidth) * getSize(lineWidth);\\n#else\\n  return in_lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\n  float halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\n  halfWidth = max(halfWidth, 2.0);\\n#endif\\n  return halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\n  float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\n#if defined(SDF) && !defined(HIGHLIGHT)\\n  thinLineFactor *= 2.0;\\n#endif\\n  return thinLineFactor * halfWidth * offset * SCALE;\\n}\\nvoid main()\\n{\\n  INIT;\\n  float a_bitSet          = a_segmentDirection.w;\\n  float a_accumulatedDist = a_accumulatedDistanceAndHalfWidth.x;\\n  float a_lineHalfWidth   = a_accumulatedDistanceAndHalfWidth.y * WIDTH_SCALE;\\n  float aa                = 0.5 * u_antialiasing;\\n  vec2  a_offset          = a_offsetAndNormal.xy;\\n  float baseWidth = getBaseLineHalfWidth(a_lineHalfWidth);\\n  float halfWidth = getLineHalfWidth(baseWidth, aa);\\n  float z         = 2.0 * step(baseWidth, 0.0);\\n  vec2  dist      = getDist(a_offset, halfWidth);\\n  vec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\n  vec3  pos       = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + offset;\\n  v_color         = getColor(a_color, a_bitSet, 0);\\n  v_opacity       = getOpacity();\\n  v_lineHalfWidth = halfWidth;\\n  v_id            = norm(a_id);\\n  v_normal        = a_offsetAndNormal.zw * SCALE;\\n  v_pos           = vec3(pos.xy, z);\\n#ifdef PATTERN\\n  v_tlbr          = a_tlbr / u_mosaicSize.xyxy;\\n  v_patternSize   = vec2(a_tlbr.z - a_tlbr.x, a_tlbr.w - a_tlbr.y);\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\n  v_accumulatedDistance = a_accumulatedDist + dot(SCALE * a_segmentDirection.xy, dist / u_zoomFactor);\\n#endif\\n  gl_Position = vec4(applyFilter(v_color, v_pos, getFilterFlags()), 1.0);\\n}\"},text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec4 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\nvoid main()\\n{\\n  float SDF_CUTOFF = (2.0 / 8.0);\\n  float SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\n  lowp float dist = texture2D(u_texture, v_tex).a;\\n  mediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\n  edge /= 2.0;\\n#endif\\n  lowp float aa = v_antialiasingWidth;\\n  lowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\n  gl_FragColor = alpha * v_color * v_opacity;\\n#ifdef ID\\n  if (gl_FragColor.a < 1.0 / 255.0) {\\n    discard;\\n  }\\n  gl_FragColor = v_id;\\n#endif\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(in float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\n  return getSize(baseSize);\\n#endif\\n  return baseSize;\\n}\\nvoid main()\\n{\\n  INIT;\\n  float a_referenceSize = a_aux.z * a_aux.z / 256.0;\\n  float a_bitSet        = a_aux.w;\\n  float a_fontSize      = a_texFontSize.z;\\n  vec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\n  vec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\n  float fontSize      = getTextSize(a_fontSize, a_referenceSize);\\n  float scaleFactor   = fontSize / a_fontSize;\\n  float fontScale     = fontSize / SDF_FONT_SIZE;\\n  vec3  offset        = getRotation() * vec3(scaleFactor * a_offset, 0.0);\\n  mat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\n  v_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\n  v_opacity = getOpacity();\\n  v_id      = norm(a_id);\\n  v_tex     = a_texCoords / u_mosaicSize;\\n  v_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\n  v_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\n  v_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n  gl_Position =  vec4(applyFilter(v_color, v_pos, getFilterFlags()), 1.0);\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\n  return floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\n  float offset = pow(2.0, float(bitIndex));\\n  return mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\n  return getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\n  return getBit(bitset, 0);\\n}\\nhighp vec4 unpackDisplayIdTexel(in highp vec4 bitset) {\\n  float isAggregate = getBit(bitset.a, 7);\\n  return (1.0 - isAggregate) * bitset + isAggregate * (vec4(bitset.rgba) - vec4(0.0, 0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\n  float r = mod(rshift(u32, 0), 255.0);\\n  float g = mod(rshift(u32, 8), 255.0);\\n  float b = mod(rshift(u32, 16), 255.0);\\n  float a = mod(rshift(u32, 24), 255.0);\\n  return vec4(r, g, b, a);\\n}\\nvec4 norm(in vec4 v) {\\n  return v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\n  return max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\n  return (bytes - 127.0) / 127.0;\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec4 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef OES_TEXTURE_FLOAT\\n  target.rgba = getAttributeData2(a_id);\\n#else\\n  vec4 data0 = getAttributeData2(a_id);\\n  vec4 data1 = getAttributeData3(a_id);\\n  target.r = u88VVToFloat(data0.rg * 255.0);\\n  target.g = u88VVToFloat(data0.ba * 255.0);\\n  target.b = u88VVToFloat(data1.rg * 255.0);\\n  target.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n  #define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n  #define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\n  float isColorLocked   = getBit(a_bitSet, index);\\n  return getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\n  return a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\n  return getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\n  return 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\n  return getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\n  return in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\n  return getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\n  return mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\n  return ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\n  return getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\n  return getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\n  vec4 data0 = getAttributeData0(a_id) * 255.0;\\n  return data0.g;\\n}\\nmat3 getMatrix(float isMapAligned) {\\n  return isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 applyFilter(inout vec4 color, inout vec3 pos, in float filterFlags) {\\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\n  pos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n  #if !defined(HIGHLIGHT_ALL)\\n    pos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n  #endif\\n#endif\\n  return pos;\\n}\\nvec3 applyFilterLabels(inout vec4 color, inout vec3 pos, in float filterFlags) {\\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifndef OUTSIDE_LABELS_VISIBLE\\n  pos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#endif\\n  return pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n  #define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n  #define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\n  return (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\n  if (isNan(sizeValue)) {\\n    return fallback;\\n  }\\n  float interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\n  interpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\n  return u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\n  if (isNan(sizeValue)) {\\n    return fallback;\\n  }\\n  if (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\n    return u_vvSizeFieldStopsSizes[0];\\n  }\\n  for (int i = 1; i < VV_SIZE_N; ++i) {\\n    if (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\n      float f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\n      return mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n    }\\n  }\\n  return u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\n  if (isNan(sizeValue)) {\\n    return fallback;\\n  }\\n  return u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\n  if (isNan(opacityValue)) {\\n    return 1.0;\\n  }\\n  if (opacityValue <= u_vvOpacityValues[0]) {\\n    return u_vvOpacities[0];\\n  }\\n  for (int i = 1; i < VV_OPACITY_N; ++i) {\\n    if (u_vvOpacityValues[i] >= opacityValue) {\\n      float f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\n      return mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n    }\\n  }\\n  return u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\n  if (isNan(rotationValue)) {\\n    return mat4(1, 0, 0, 0,\\n                0, 1, 0, 0,\\n                0, 0, 1, 0,\\n                0, 0, 0, 1);\\n  }\\n  float rotation = rotationValue;\\n  if (u_vvRotationType == 1.0) {\\n    rotation = 90.0 - rotation;\\n  }\\n  float angle = C_DEG_TO_RAD * rotation;\\n  float sinA = sin(angle);\\n  float cosA = cos(angle);\\n  return mat4(cosA, sinA, 0, 0,\\n              -sinA,  cosA, 0, 0,\\n              0,     0, 1, 0,\\n              0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\n  if (isNan(rotationValue)) {\\n    return mat3(1, 0, 0,\\n                0, 1, 0,\\n                0, 0, 1);\\n  }\\n  float rotation = rotationValue;\\n  if (u_vvRotationType == 1.0) {\\n    rotation = 90.0 - rotation;\\n  }\\n  float angle = C_DEG_TO_RAD * -rotation;\\n  float sinA = sin(angle);\\n  float cosA = cos(angle);\\n  return mat3(cosA, -sinA, 0,\\n             sinA, cosA, 0,\\n              0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\n  if (isNan(colorValue) || isColorLocked == 1.0) {\\n    return fallback;\\n  }\\n  if (colorValue <= u_vvColorValues[0]) {\\n    return u_vvColors[0];\\n  }\\n  for (int i = 1; i < VV_COLOR_N; ++i) {\\n    if (u_vvColorValues[i] >= colorValue) {\\n      float f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\n      return mix(u_vvColors[i-1], u_vvColors[i], f);\\n    }\\n  }\\n  return u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\n  return getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\n  return u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\n  float outSize = getVVStopsSize(vvSize, size);\\n  return isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\n  return getVVUnitValue(vvSize, size);\\n#else\\n  return size;\\n#endif\\n}\"},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\n  gl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\n  float mirrorFactor = 1.2 - factor;\\n  return mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\n  gl_FragColor = u_bloomStrength * (\\n    lerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\n    lerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\n    lerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\n    lerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\n    lerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n  );\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\n    return 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\n  vec2 invSize = 1.0 / u_texSize;\\n  float fSigma = float(SIGMA);\\n  float weightSum = gaussianPdf(0.0, fSigma);\\n  vec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\n  for (int i = 1; i < KERNEL_RADIUS; i ++) {\\n    float x = float(i);\\n    float w = gaussianPdf(x, fSigma);\\n    vec2 uvOffset = u_direction * invSize * x;\\n    vec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\n    vec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\n    pixelColorSum += (sample1 + sample2) * w;\\n    weightSum += 2.0 * w;\\n  }\\n  gl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec4 texel = texture2D(u_texture, v_uv);\\n  vec3 luma = vec3(0.299, 0.587, 0.114);\\n  float v = dot(texel.xyz, luma);\\n  vec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\n  float alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\n  gl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\n    return 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\n  vec2 invSize = 1.0 / u_texSize;\\n  float fSigma = u_sigma;\\n  float weightSum = gaussianPdf(0.0, fSigma);\\n  vec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\n  for (int i = 1; i < KERNEL_RADIUS; i ++) {\\n    float x = float(i);\\n    float w = gaussianPdf(x, fSigma);\\n    vec2 uvOffset = u_direction * invSize * x;\\n    vec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\n    vec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\n    pixelColorSum += (sample1 + sample2) * w;\\n    weightSum += 2.0 * w;\\n  }\\n  gl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\n    float samples[10];\\n    samples[0] = -0.08;\\n    samples[1] = -0.05;\\n    samples[2] = -0.03;\\n    samples[3] = -0.02;\\n    samples[4] = -0.01;\\n    samples[5] =  0.01;\\n    samples[6] =  0.02;\\n    samples[7] =  0.03;\\n    samples[8] =  0.05;\\n    samples[9] =  0.08;\\n    vec2 dir = 0.5 - v_uv;\\n    float dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\n    dir = dir / dist;\\n    vec4 color = texture2D(u_colorTexture,v_uv);\\n    vec4 sum = color;\\n    for (int i = 0; i < 10; i++) {\\n      sum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n    }\\n    sum *= 1.0 / 11.0;\\n    float t = dist * sampleStrength;\\n    t = clamp(t, 0.0, 1.0);\\n    gl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec4 minColor = texture2D(u_minColor, vec2(0.5));\\n  vec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\n  vec4 color = texture2D(u_texture, v_uv);\\n  vec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\n  vec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\n  vec3 colorUnpremultiply = color.rgb / color.a;\\n  vec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\n  gl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\n  vec2 onePixel = vec2(1.0) / u_srcResolution;\\n  vec2 uv = (srcPixel + 0.5) / u_srcResolution;\\n  vec4 minColor = vec4(1.0);\\n  vec4 maxColor = vec4(0.0);\\n  for (int y = 0; y < CELL_SIZE; ++y) {\\n    for (int x = 0; x < CELL_SIZE; ++x) {\\n      vec2 offset = uv + vec2(x, y) * onePixel;\\n      minColor = min(minColor, texture2D(u_minTexture, offset));\\n      maxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n    }\\n  }\\n  gl_FragData[0] = minColor;\\n  gl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\n  vec4 blurColor = texture2D(u_blurTexture, v_uv);\\n  gl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"},\"drop-shadow.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp vec2 u_offset;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec3 offset = u_displayViewMat3 * vec3(u_offset, 0.0);\\n  gl_Position = vec4(a_position, 0.0, 1.0) + vec4(offset, 0.0);\\n  v_uv = (a_position + 1.0) / 2.0;\\n}\"},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\n  G[0] = g0,\\n  G[1] = g1,\\n  G[2] = g2,\\n  G[3] = g3,\\n  G[4] = g4,\\n  G[5] = g5,\\n  G[6] = g6,\\n  G[7] = g7,\\n  G[8] = g8;\\n  mat3 I;\\n  float cnv[9];\\n  vec3 sample;\\n  for (float i = 0.0; i < 3.0; i++) {\\n    for (float j = 0.0; j < 3.0; j++) {\\n      sample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\n      I[int(i)][int(j)] = length(sample);\\n    }\\n  }\\n  for (int i = 0; i < 9; i++) {\\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\n    cnv[i] = dp3 * dp3;\\n  }\\n  float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\n  float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\n  gl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\n  mat3 I;\\n  float cnv[2];\\n  vec3 sample;\\n  G[0] = g0;\\n  G[1] = g1;\\n  for (float i = 0.0; i < 3.0; i++) {\\n    for (float j = 0.0; j < 3.0; j++) {\\n      sample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\n      I[int(i)][int(j)] = length(sample);\\n    }\\n  }\\n  for (int i = 0; i < 2; i++) {\\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\n    cnv[i] = dp3 * dp3;\\n  }\\n  gl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\n  mat3 I;\\n  float cnv[2];\\n  vec3 sample;\\n  G[0] = g0;\\n  G[1] = g1;\\n  for (float i = 0.0; i < 3.0; i++) {\\n    for (float j = 0.0; j < 3.0; j++) {\\n      sample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\n      I[int(i)][int(j)] = length(sample);\\n    }\\n  }\\n  for (int i = 0; i < 2; i++) {\\n    float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\n    cnv[i] = dp3 * dp3;\\n  }\\n  vec4 color = texture2D(u_colorTexture, v_uv);\\n  gl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\n  vec4 color = texture2D(u_colorTexture, v_uv);\\n  vec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\n  float a = color.a;\\n  gl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\n  gl_Position = vec4(a_position, 0.0, 1.0);\\n  v_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\n  vec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\n  vec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\n  float alpha = u_opacity * color.a;\\n  gl_FragColor = vec4(alpha * color.rgb, alpha);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\n  v_texcoord = a_pos;\\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_isFloatTexture;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\n  vec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\n  targetLocation = projectPixelLocation(targetLocation);\\n#endif\\n  return targetLocation;\\n}\\nbool isOutside(vec2 coords){\\n   if (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\n     return true;\\n   } else {\\n     return false;\\n   }\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\n  vec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\n  vec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\n  vec4 color = texture2D(u_image, pixelLocation);\\n#endif\\n  return color;\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\n  vec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\n  float maxI = 255.0;\\n  float mid = 128.0;\\n  float c = u_contrastOffset;\\n  float b = u_brightnessOffset;\\n  vec4 v;\\n  if (c > 0.0 && c < 100.0) {\\n    v = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n  } else if (c <= 0.0 && c > -100.0) {\\n    v = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n  } else if (c == 100.0) {\\n    v = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\n    v = (sign(v) + 1.0) / 2.0;\\n  } else if (c == -100.0) {\\n    v = vec4(mid, mid, mid, currentPixel.a);\\n  }\\n  return vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n  vec2 index_image = floor(coords * u_targetImageSize);\\n  vec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\n  vec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\n  vec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\n  vec2 srcLocation;\\n  vec2 transform_location = index_transform + oneTransformPixel * 0.5;\\n  if (pos.s <= pos.t) {\\n    vec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\n    vec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\n    srcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\n    srcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n  } else {\\n    vec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\n    vec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\n    srcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\n    srcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n  }\\n  return srcLocation;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\n  if (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\n    return 0.0;\\n  }\\n  else {\\n    return e;\\n  }\\n}\\nvec3 rgb2hsv(vec3 c) {\\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n  vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\n  vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\n  float d = q.x - min(q.w, q.y);\\n  float e = 1.0e-10;\\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\n  val = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\n  vec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\n  vec3 hsv = rgb2hsv(rgb.xyz);\\n  hsv.z = hillshade;\\n  return vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\\n  if (isOutside(pixelLocation)) {\\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n     return;\\n  }\\n  vec4 currentPixel = getPixel(pixelLocation);\\n  if (currentPixel.a == 0.0) {\\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    return;\\n  }\\n  vec2 axy = vec2(-1.0, -1.0);\\n  vec2 bxy = vec2(0.0, -1.0);\\n  vec2 cxy = vec2(1.0, -1.0);\\n  vec2 dxy = vec2(-1.0, 0.0);\\n  vec2 fxy = vec2(1.0, 0.0);\\n  vec2 gxy = vec2(-1.0, 1.0);\\n  vec2 hxy = vec2(0.0, 1.0);\\n  vec2 ixy = vec2(1.0, 1.0);\\n  vec2 onePixel = 1.0 / u_srcImageSize;\\n  if (pixelLocation.s < onePixel.s) {\\n    axy[0] = 1.0;\\n    dxy[0] = 1.0;\\n    gxy[0] = 1.0;\\n  }\\n  if (pixelLocation.t < onePixel.t) {\\n    axy[1] = 1.0;\\n    bxy[1] = 1.0;\\n    cxy[1] = 1.0;\\n  }\\n  if (pixelLocation.s > 1.0 - onePixel.s) {\\n    cxy[0] = -1.0;\\n    fxy[0] = -1.0;\\n    ixy[0] = -1.0;\\n  }\\n  if (pixelLocation.t > 1.0 - onePixel.t) {\\n    gxy[1] = -1.0;\\n    hxy[1] = -1.0;\\n    ixy[1] = -1.0;\\n  }\\n  vec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\n  vec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\n  vec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\n  vec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\n  vec4 ve = texture2D(u_image, pixelLocation);\\n  vec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\n  vec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\n  vec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\n  vec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\n  float dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\n  float dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\n  float dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\n  float hillshade = 0.0;\\n  if (u_hillshadeType == 0){\\n\\t   float cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\n     float z = (u_cosZs[0] + cosDelta) / dzd;\\n     if (z < 0.0)  z = 0.0;\\n\\t   hillshade = z;\\n  } else {\\n\\t  for (int k = 0; k < 6; k++) {\\n\\t\\t float cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\n\\t\\t float z = (u_cosZs[k] + cosDelta) / dzd;\\n\\t\\t if (z < 0.0) z = 0.0;\\n     hillshade = hillshade + z * u_weights[k];\\n\\t\\t if (k == 5) break;\\n    }\\n  }\\n  float alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\n  gl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\n  gl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\",\"hillshade.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\n  v_texcoord = a_pos;\\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\n  float clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\n  vec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\n  vec4 color = texture2D(u_colormap, clrPosition);\\n  vec4 result = vec4(color.rgb, color.a * currentPixel.a);\\n  return result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\\n  if (isOutside(pixelLocation)) {\\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n     return;\\n  }\\n  vec4 currentPixel = getPixel(pixelLocation);\\n  vec4 result = colorize(currentPixel, 1.0);\\n  gl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\",\"lut.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\n  v_texcoord = a_pos * u_scale + u_offset;\\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\n  if (val >= maxCutOff) {\\n    return maxOutput;\\n  } else if (val <= minCutOff) {\\n    return minOutput;\\n  }\\n  float stretchedVal;\\n  if (useGamma) {\\n  \\tfloat tempf = 1.0;\\n\\t  float outRange = maxOutput - minOutput;\\n\\t  float relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\n\\t  if (gamma > 1.0) {\\n      tempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n    }\\n    stretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n  } else {\\n    stretchedVal = minOutput + (val - minCutOff) * factor;\\n  }\\n  return stretchedVal;\\n}\\nvoid main() {\\n  vec2 pixelLocation = getPixelLocation(v_texcoord);\\n  if (isOutside(pixelLocation)) {\\n     gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n     return;\\n  }\\n  vec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\n  gl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n  return;\\n#endif\\n  if (u_bandCount == 1) {\\n    float grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\n      vec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\n      gl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\n      gl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n  } else {\\n    float redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n    float greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\n    float blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\n    gl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n  }\\n}\",\"stretch.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\n  v_texcoord = a_pos * u_scale + u_offset;\\n  gl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\n  gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nvoid main() {\\n  gl_Position = vec4(a_pos, 0.0, 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\n  lowp vec4 color = texture2D(u_texture, v_tex);\\n  gl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\n  mediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\n  vec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\n  gl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n  v_tex = a_pos;\\n}\"},util:{\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n    255.0 / (256.0),\\n    255.0 / (256.0 * 256.0),\\n    255.0 / (256.0 * 256.0 * 256.0),\\n    255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n  );\\nfloat rgba2float(vec4 rgba) {\\n  return dot(rgba, rgba2float_factors);\\n}\"}};export default e;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../../../core/has.js\";import\"../../../../../../core/mathUtils.js\";import\"../../../../../../chunks/builtins.js\";import\"../../../../../webgl/checkWebGLError.js\";import\"../../../../../webgl/FramebufferObject.js\";import r from\"../../../../../webgl/ShaderCompiler.js\";import e from\"./shaderRepository.js\";function o(r){let o=e;return r.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new r(o);function s(r){return t.resolveIncludes(r)}export{s as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport e from\"./Program.js\";function n(e){let n=\"\";for(const t in e){const o=e[t];if(\"boolean\"==typeof o)o&&(n+=`#define ${t}\\n`);else if(\"number\"==typeof o)n+=`#define ${t} ${o.toFixed()}\\n`;else if(\"object\"==typeof o){const e=o.options;let r=0;for(const t in e)n+=`#define ${e[t]} ${(r++).toFixed()}\\n`;n+=`#define ${t} ${e[o.value]}\\n`}}return n}function t(n,t,o,r){o=o||{},r=r||\"\";const f=\"function\"==typeof t.shaders?t.shaders(o):t.shaders;return new e(n,r+f.vertexShader,r+f.fragmentShader,t.attributes)}export{t as createProgram,n as glslifyDefineMap};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import\"../../../../../core/mathUtils.js\";import{f as t}from\"../../../../../chunks/vec4f32.js\";import\"../../../../../chunks/builtins.js\";import r from\"../../../../webgl/BufferObject.js\";import e from\"../../../../webgl/VertexArrayObject.js\";import\"../../../../webgl/FramebufferObject.js\";import{createProgram as i}from\"../../../../webgl/programUtils.js\";import s from\"./WGLBrush.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";class a extends s{constructor(){super(...arguments),this._color=t(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:t},r){t.setDepthWriteEnabled(!1),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(7680,7680,7681),t.setStencilWriteMask(255),t.setStencilFunctionSeparate(1032,516,r.stencilRef,255)}draw(t,r){const{context:e}=t;this._initialized||this._initialize(e),e.bindVAO(this._solidVertexArrayObject),e.bindProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",r.coordRange),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),e.drawArrays(5,0,4),e.bindVAO()}_initialize(t){if(this._initialized)return!0;const s=i(t,o);if(!s)return!1;const a={geometry:[{name:\"a_pos\",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},n=new Int8Array([0,0,1,0,0,1,1,1]),l=r.createVertex(t,35044,n),d=new e(t,o.attributes,a,{geometry:l});return this._solidProgram=s,this._solidVertexArrayObject=d,this._initialized=!0,!0}}export default a;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nclass r{constructor(){this.name=this.constructor.name||\"UnnamedBrush\"}prepareState(r,t,a){}draw(r,t,a){}drawMany(r,t,a){for(const s of t)this.draw(r,s,a)}}export default r;\n"],"sourceRoot":""}