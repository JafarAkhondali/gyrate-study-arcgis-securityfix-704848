{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["n","e","r","data","options","toJSON","s","pixelBlock","fromJSON","extent","o","this","symbolizer","symbolize","Promise","resolve","symbolizerJSON","histograms","rendererJSON","type","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","srcMosaicSize","coefs","t","destDimension","sampleSpacing","interpolation"],"mappings":"kHAAA,mFAIoV,MAAMA,EAAE,aAAaC,GAAG,MAAMC,QAAQ,eAAED,EAAEE,KAAKF,EAAEG,SAAS,OAAOF,GAAGA,EAAEG,SAAS,UAAUC,GAAGA,EAAEC,WAAW,OAAEC,SAASF,EAAEC,YAAYD,EAAEG,OAAOH,EAAEG,OAAO,OAAED,SAASF,EAAEG,QAAQ,KAAK,MAAMC,EAAEC,KAAKC,WAAWC,UAAUP,GAAG,OAAOQ,QAAQC,QAAQL,GAAGA,EAAEL,UAAU,uBAAuBJ,GAAG,IAAIC,EAAES,KAAKC,WAAW,OAAEJ,SAASP,EAAEe,gBAAgBf,EAAEgB,YAAY,mBAAmB,OAAOf,EAAES,KAAKC,iBAAY,EAAOV,EAAEgB,aAAaC,QAAQR,KAAKC,WAAWM,aAAaD,WAAWhB,EAAEgB,YAAY,QAAQhB,GAAG,MAAMK,EAAEK,KAAKC,WAAWQ,cAAc,OAAEZ,SAASP,EAAEoB,eAAepB,EAAEqB,eAAe,OAAOR,QAAQC,QAAQT,GAAGA,EAAED,UAAU,6BAA6BJ,GAAG,MAAMK,EAAE,eAAE,OAAEE,SAASP,EAAEoB,gBAAgB,OAAOP,QAAQC,QAAQT,GAAG,MAAML,GAAG,MAAMK,EAAE,eAAE,OAAEE,SAASP,EAAEoB,eAAepB,EAAEsB,SAAStB,EAAEuB,qBAAqB,OAAOlB,GAAGA,EAAEmB,QAAQ,CAAExB,EAAEC,KAAKI,EAAEoB,IAAIxB,EAAE,MAAMD,OAAE,EAAOA,EAAEI,YAAaS,QAAQC,QAAQT,GAAG,yBAAyBL,GAAG,MAAMK,EAAEL,EAAE0B,eAAeC,IAAK3B,GAAGA,EAAE,IAAI,OAAEA,GAAG,MAAOS,EAAE,eAAEJ,EAAEL,EAAE4B,eAAe,IAAI5B,EAAE6B,MAAM,OAAOpB,GAAGA,EAAEL,SAAS,MAAM0B,EAAE,eAAErB,EAAET,EAAE+B,cAAc/B,EAAE6B,MAAM7B,EAAEgC,cAAchC,EAAEiC,eAAe,OAAOH,GAAGA,EAAE1B,UAAyB","file":"js/chunk-2d0aec69.33d09552.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport e from\"../../geometry/Extent.js\";import\"../../geometry.js\";import r from\"./PixelBlock.js\";import{decode as s}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as o,split as t,mosaic as i,approximateTransform as m}from\"./rasterFunctions/pixelUtils.js\";import l from\"../../renderers/support/RasterSymbolizer.js\";class n{async decode(e){const r=await s(e.data,e.options);return r&&r.toJSON()}symbolize(s){s.pixelBlock=r.fromJSON(s.pixelBlock),s.extent=s.extent?e.fromJSON(s.extent):null;const o=this.symbolizer.symbolize(s);return Promise.resolve(o&&o.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=l.fromJSON(e.symbolizerJSON),e.histograms&&\"rasterStretch\"===(null==(r=this.symbolizer)?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(r.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(s&&s.toJSON())}estimateStatisticsHistograms(e){const s=o(r.fromJSON(e.srcPixelBlock));return Promise.resolve(s)}split(e){const s=t(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach(((e,r)=>{s.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(s)}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map((e=>e?new r(e):null)),o=i(s,e.srcMosaicSize);if(!e.coefs)return o&&o.toJSON();const t=m(o,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return t&&t.toJSON()}}export default n;\n"],"sourceRoot":""}