(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-12b6a992"],{2535:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return f}));var r=a("a4ee"),i=a("ce50"),s=a("e92d"),n=a("f4cc"),o=a("59b2"),c=(a("b50f"),a("c120"),a("cea0"),a("d386")),l=a("3af1"),h=a("2d39"),p=a("566d"),u=a("bdb8"),b=a("365a"),y=a("6c7a"),m=a("a6b6");const d=s["a"].getLogger("esri.views.2d.layers.WMSLayerView2D");let g=class extends(Object(m["a"])(Object(y["a"])(Object(p["a"])(b["a"])))){initialize(){const{layer:e,view:t}=this;e.supportsSpatialReference(t.spatialReference)||this.addResolvingPromise(Promise.reject(new i["a"]("layerview:spatial-reference-incompatible","The spatial references supported by this WMS layer are incompatible with the spatial reference of the view",{layer:e})))}update(e){this.strategy.update(e).catch(e=>{Object(n["m"])(e)||d.error(e)})}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:a}=e;this._bitmapContainer=new h["a"],this.container.addChild(this._bitmapContainer),this.strategy=new u["a"]({container:this._bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:a,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.handles.add(this.watch("exportImageVersion",()=>this.requestUpdate()),"exportImageVersion")}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t}=this,a=this._bitmapContainer,{x:r,y:i}=e,{spatialReference:s}=t;let n=null,o=0,c=0;if(a.children.some(e=>{const{width:t,height:a,resolution:h,x:p,y:u}=e,b=p+h*t,y=u-h*a;return r>=p&&r<=b&&i<=u&&i>=y&&(n=new l["a"]({xmin:p,ymin:y,xmax:b,ymax:u,spatialReference:s}),o=t,c=a,!0)}),!n)return null;const h=n.width/o,p=Math.round((r-n.xmin)/h),u=Math.round((n.ymax-i)/h);return{extent:n,width:o,height:c,x:p,y:u}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,a,r){return this.layer.fetchImage(e,t,a,{timeExtent:this.timeExtent,...r})}};Object(r["a"])([Object(o["b"])()],g.prototype,"strategy",void 0),Object(r["a"])([Object(o["b"])()],g.prototype,"updating",void 0),g=Object(r["a"])([Object(c["a"])("esri.views.2d.layers.WMSLayerView2D")],g);const f=g},a6b6:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var r=a("a4ee"),i=a("ce50"),s=a("59b2"),n=(a("b50f"),a("c120"),a("cea0"),a("d386")),o=a("22f4"),c=a("b807");const l=e=>{let t=class extends e{initialize(){this.exportImageParameters=new c["a"]({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new i["a"]("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:a}=t;if(!a)return Promise.reject(new i["a"]("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:a}));const r=this.createFetchPopupFeaturesQuery(e);if(!r)return Promise.resolve([]);const{extent:s,width:n,height:o,x:c,y:l}=r;if(!(s&&n&&o))throw new i["a"]("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:n,height:o});const h=t.fetchFeatureInfo(s,n,o,c,l);return Promise.resolve(h?[h]:[])}};return Object(r["a"])([Object(s["b"])()],t.prototype,"exportImageParameters",void 0),Object(r["a"])([Object(s["b"])({readOnly:!0})],t.prototype,"exportImageVersion",null),Object(r["a"])([Object(s["b"])()],t.prototype,"layer",void 0),Object(r["a"])([Object(s["b"])(o["a"])],t.prototype,"timeExtent",void 0),t=Object(r["a"])([Object(n["a"])("esri.layers.mixins.WMSLayerView")],t),t}},b807:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var r=a("a4ee"),i=a("fc29"),s=a("9096"),n=a("59b2"),o=(a("b50f"),a("c120"),a("cea0"),a("d386"));const c={visible:"visibleSublayers"};let l=class extends(Object(s["b"])(i["a"])){constructor(e){super(e),this.scale=0}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.sublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("wms-sublayer-update",e=>this.notifyChange(c[e.propertyName]))],"layer"))}get layers(){const{visibleSublayers:e}=this;return e.filter(e=>e.name).map(e=>e.name).join(",")}get version(){this.commitProperty("layers");const e=this.layer;return e&&e.commitProperty("imageTransparency"),(this._get("version")||0)+1}get visibleSublayers(){const{layer:e,scale:t}=this,a=null==e?void 0:e.sublayers,r=[],i=e=>{const{minScale:a,maxScale:s,sublayers:n,visible:o}=e;o&&(0===t||(0===a||t<=a)&&(0===s||t>=s))&&(n?n.forEach(i):r.unshift(e))};return null==a||a.forEach(i),r}toJSON(){const{layer:e,layers:t}=this,{imageFormat:a,imageTransparency:r,version:i}=e;return{format:a,request:"GetMap",service:"WMS",styles:"",transparent:r,version:i,layers:t}}};Object(r["a"])([Object(n["b"])()],l.prototype,"layer",null),Object(r["a"])([Object(n["b"])({readOnly:!0})],l.prototype,"layers",null),Object(r["a"])([Object(n["b"])({type:Number})],l.prototype,"scale",void 0),Object(r["a"])([Object(n["b"])({readOnly:!0})],l.prototype,"version",null),Object(r["a"])([Object(n["b"])({readOnly:!0})],l.prototype,"visibleSublayers",null),l=Object(r["a"])([Object(o["a"])("esri.layers.support.ExportWMSImageParameters")],l)}}]);